Index: include/vrs/container/lineariterator.h
===================================================================
--- include/vrs/container/lineariterator.h	(revision 6691)
+++ include/vrs/container/lineariterator.h	(working copy)
@@ -70,7 +70,7 @@
     void setStartValue(const T& startValue) {
         if(startValue_ != startValue) {
             startValue_ = startValue;
-            modified();
+            SharedObj::modified();
         }
     }
     const T& getStartValue() const { return startValue_; }
@@ -78,7 +78,7 @@
     void setEndValue(const T& endValue) {
         if(endValue_ != endValue) {
             endValue_ = endValue;
-            modified();
+            SharedObj::modified();
         }
     }
     const T& getEndValue() const { return endValue_; }
@@ -88,7 +88,7 @@
     void setSize(unsigned int size) {
         if(size_ != size) {
             size_ = size;
-            modified();
+            SharedObj::modified();
         }
     }
     virtual T get(unsigned int index) const {
Index: scons/use-boostlib.py
===================================================================
--- scons/use-boostlib.py	(revision 6691)
+++ scons/use-boostlib.py	(working copy)
@@ -15,9 +15,9 @@
 
     #env.AppendUnique (CPPPATH=['/usr/include'])
     #env.AppendUnique (LIBPATH=['/usr/lib'])
-    env.AppendUnique (LIBS=['boost_filesystem'])
-    env.AppendUnique (LIBS=['boost_system'])
-    env.AppendUnique (LIBS=['boost_thread'])
+    env.AppendUnique (LIBS=['boost_filesystem-mt'])
+    env.AppendUnique (LIBS=['boost_system-mt'])
+    env.AppendUnique (LIBS=['boost_thread-mt'])
 
 def exists(env):
     return True
Index: src/qt4/qt4canvas.cpp
===================================================================
--- src/qt4/qt4canvas.cpp	(revision 6691)
+++ src/qt4/qt4canvas.cpp	(working copy)
@@ -163,10 +163,11 @@
         s_drawableStack.pop_back();
         s_displayStack.pop_back();
 
-        if(
+        if((
             (context  != glXGetCurrentContext())  ||
             (drawable != glXGetCurrentDrawable()) ||
-            (display  != glXGetCurrentDisplay())
+            (display  != glXGetCurrentDisplay())) &&
+	    (context != 0 && drawable != 0 && display != 0)
         ) {
             glXMakeCurrent(display, drawable, context);
         }
